package routes

import (
	"finalyearproject/Backend/api/controllers"
	"finalyearproject/Backend/middleware"

	"github.com/gofiber/fiber/v2"
)

// SetupRoutes sets up API routes
func SetupRoutes(app *fiber.App) {
	api := app.Group("/api/v1") // ‡πÉ‡∏ä‡πâ Prefix "/api/v1" ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö API ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

	// ‚úÖ Authentication Routes
	auth := api.Group("/auth")
	auth.Post("/update-role", controllers.UpdateUserRole)
	auth.Post("/register", controllers.Register)
	auth.Get("/check-email", controllers.CheckEmailAvailability)
	auth.Post("/login", controllers.Login)
	auth.Post("/logout", controllers.Logout)       // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á Logout
	auth.Get("/get-role", controllers.GetUserRole) // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° API ‡∏î‡∏∂‡∏á Role ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
	auth.Get("/user-info", middleware.AuthMiddleware(), controllers.GetUserInfo)
	auth.Put("/update-user", middleware.AuthMiddleware(), controllers.UpdateUserInfo)

	// ‚úÖ Protected Routes (‡πÉ‡∏ä‡πâ Middleware JWT)
	protected := api.Group("/protected", middleware.AuthMiddleware())
	protected.Get("/route", controllers.ProtectedRoute)

	// ‚úÖ Farmer Routes
	farmer := api.Group("/farmers")
	farmer.Post("/", controllers.CreateFarmer)
	farmer.Get("/me", middleware.AuthMiddleware(), controllers.GetFarmerByUser) // ‚úÖ ‡πÉ‡∏ä‡πâ Middleware
	farmer.Get("/:id", controllers.GetFarmerByID)                               // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Farmer ‡∏ï‡∏≤‡∏° ID
	farmer.Put("/update", middleware.AuthMiddleware(), controllers.UpdateFarmer)

	// ‚úÖ Raw Milk Routes (‡πÄ‡∏Å‡∏©‡∏ï‡∏£‡∏Å‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡πâ‡∏≥‡∏ô‡∏°‡∏î‡∏¥‡∏ö)
	rawMilk := api.Group("/rawmilk")
	rawMilk.Post("/", middleware.AuthMiddleware(), controllers.AddRawMilkHandler)              // üîê ‡πÉ‡∏ä‡πâ Middleware ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ POST
	rawMilk.Get("/:id", controllers.GetRawMilkHandler)                                         // ‚úÖ ‡πÄ‡∏≠‡∏≤ Middleware ‡∏≠‡∏≠‡∏Å
	rawMilk.Post("/upload", middleware.AuthMiddleware(), controllers.UploadRawMilkFileHandler) // ‚úÖ ‡πÉ‡∏´‡∏°‡πà: ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå JSON ‡πÑ‡∏õ IPFS
	rawMilk.Get("/ipfs/:cid", controllers.GetRawMilkFromIPFSHandler)                           // ‚úÖ ‡πÉ‡∏´‡∏°‡πà: ‡∏î‡∏∂‡∏á JSON ‡∏à‡∏≤‡∏Å IPFS

	// ‚úÖ Factory Routes
	factory := api.Group("/factories")
	factory.Post("/", controllers.CreateFactory)

	// ‚úÖ Logistics Routes
	logistics := api.Group("/logistics")
	logistics.Post("/", controllers.CreateLogistics)

	// ‚úÖ Retailer Routes
	retailer := api.Group("/retailers")
	retailer.Post("/", controllers.CreateRetailer)

	// ‚úÖ Certification Routes (‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏ö‡πÉ‡∏ö‡πÄ‡∏ã‡∏≠‡∏£‡πå)
	certification := api.Group("/certifications")
	certification.Post("/upload", controllers.UploadCertificate)
	certification.Post("/create", controllers.CreateCertification)
	certification.Get("/:entityID", controllers.GetCertificationByEntity)
	certification.Delete("/:entityID", controllers.DeleteCertification) // ‚úÖ ‡πÉ‡∏´‡∏°‡πà: ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏•‡∏ö‡πÉ‡∏ö‡πÄ‡∏ã‡∏≠‡∏£‡πå

	// ‚úÖ QR Code Routes (‡πÉ‡∏´‡∏°‡πà)
	qr := api.Group("/qr")
	qr.Get("/rawmilk/:id", controllers.GenerateQRCodeHandler) // ‚úÖ ‡πÉ‡∏ä‡πâ "/api/v1/qr/rawmilk/:id"

}
